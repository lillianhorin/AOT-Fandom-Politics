sys.timezone()
Sys.timezone()
install.packages("tidyverse")
install.packages("Matrix")
install.packages("RCurl")
install.packages("scales")
install.packages("cowplot")
install.packages("BiocManager")
install.packages("Seurat")
BiocManager::install("SingleCellExperiment")
BiocManager::install("ensembldb")
library(Seurat)
library(tidyverse)
library(Matrix)
library(RCurl)
library(scales)
library(cowplot)
library(SingleCellExperiment)
library(AnnotationHub)
library(ensembldb)
n
library(Seurat)
library(tidyverse)
library(Matrix)
library(RCurl)
library(scales)
library(cowplot)
library(SingleCellExperiment)
library(AnnotationHub)
library(ensembldb)
sessionInfo()
# Load packages
library(Seurat)
library(limma)
library(tidyverse)
library(biomaRt)
library(tibble)
library(EnhancedVolcano)
# Naming variables
date <- "201127"
dataset_name <- "TabulaMuris_FACS"
analysis_type <- "DE"
tissue <- "All"
gene_list_name <- "fullMicrotubulome"
markers <- readRDS(file = "./output/all tissues/201122_TabulaMuris_FACS_DE_All_markers.RDS")
# Load packages
library(Seurat)
library(limma)
library(tidyverse)
library(biomaRt)
library(tibble)
library(EnhancedVolcano)
markers <- readRDS(file = "./output/all tissues/201122_TabulaMuris_FACS_DE_All_markers.RDS")
# Microtubulome subset ----------------------------------------------------
goi <- read_csv("./data/microtubulome_201111.csv")
convertHumanGeneList <- function(x){
require("biomaRt")
human = useMart("ensembl", dataset = "hsapiens_gene_ensembl")
mouse = useMart("ensembl", dataset = "mmusculus_gene_ensembl")
genesV2 = getLDS(attributes = c("hgnc_symbol"),
filters = "hgnc_symbol",
values = x,
mart = human,
attributesL = c("mgi_symbol"),
martL = mouse, uniqueRows=T)
mouse_gene_list <- unique(genesV2[, 2])
return(mouse_gene_list)
}
genes <- convertHumanGeneList(gene_list)
gene_list <- goi$`Gene Symbol`
# Microtubulome subset ----------------------------------------------------
goi <- read_csv("./data/microtubulome_201111.csv")
markers <- readRDS(file = "./output/all tissues/201122_TabulaMuris_FACS_DE_All_markers.RDS")
# Load packages
library(Seurat)
library(limma)
library(tidyverse)
library(biomaRt)
library(tibble)
library(EnhancedVolcano)
markers <- readRDS(file = "./output/all tissues/201122_TabulaMuris_FACS_DE_All_markers.RDS")
markers <- readRDS(file = "./output/all tissues/201204_TabulaMuris_FACS_DE_All_markers.RDS")
BiocManager::install(c("clusterProfiler", "DOSE", "org.Hs.eg.db", "pathview", "AnnotationDbi", "EnsDb.Hsapiens.v75"))
install.packages("knitr")
install.packages("tidyverse")
install.packages("BiocManager")
BiocManager::install("pheatmap")
# Load libraries
library(tidyverse)
library(dplyr)
# Read file
data <- read_csv('210428_MS_RabbitSpleen_DMSOandTMCA_60-75kDaBand.csv', skip = 3)
# Read file
data <- read_csv('210505_MS_RabbitSpleen_DMSO-TMCA-SykInhibitors_Seph_60kDaBand.csv', skip = 3)
knitr::opts_chunk$set(echo = TRUE)
# Load libraries
library(tidyverse)
library(RColorBrewer)
social_impact_data <- tibble(
x = c("Yes", "No", "Probably", "I've Never Noticed"),
y = c(0.4932, 0.0685, 0.3699, 0.0685)
)
View(social_impact_data)
social_impact_data <- tibble(
Answer = c("Yes", "No", "Probably", "I've Never Noticed"),
Proportion = c(0.4932, 0.0685, 0.3699, 0.0685)
)
ggplot(social_impact_data, aes(Answer, Proportion)) +
geom_bar(aes(y = (..count..)/sum(..count..))) +
scale_y_continuous(labels=scales::percent) +
ylab("relative frequencies")
myplot
ggplot(social_impact_data, aes(Answer, Proportion)) +
geom_bar(aes(y = (..count..)/sum(..count..))) +
scale_y_continuous(labels=scales::percent) +
ylab("relative frequencies")
ggplot(social_impact_data, aes(Answer, Proportion)) +
geom_bar(aes(y = (..Proportion..)/sum(..Proportion..))) +
scale_y_continuous(labels=scales::percent) +
ylab("relative frequencies")
social_impact_data %>%
ggplot(aes(Answer, Proportion)) +
geom_bar(aes(y = (..Proportion..)/sum(..Proportion..))) +
scale_y_continuous(labels=scales::percent) +
ylab("relative frequencies")
social_impact_data %>%
ggplot(aes(Answer, Proportion)) +
geom_bar() +
scale_y_continuous(labels=scales::percent) +
ylab("relative frequencies")
social_impact_data %>%
ggplot(aes(Answer, Proportion)) +
geom_bar()
social_impact_data %>%
ggplot(aes(Answer, Proportion)) +
geom_bar() +
ylab("relative frequencies")
social_impact_data %>%
ggplot(aes(Answer, Proportion)) +
geom_bar() + ylab("relative frequencies")
social_impact_data %>%
ggplot(aes(Answer)) +
geom_bar() + ylab("relative frequencies")
social_impact_data <- tibble(
Answer = c("Yes", "No", "Probably", "I've Never Noticed"),
Proportion = c(0.4932, 0.0685, 0.3699, 0.0685)
)
social_impact_data
social_impact_data %>%
ggplot(aes(x = Answer, y = Proportion)) +
geom_bar(stat="identity") + ylab("relative frequencies")
social_impact_data %>%
ggplot(aes(x = Answer, y = Proportion)) +
geom_bar(stat="identity") + ylab("relative frequencies")+
scale_y_continuous(labels=scales::percent)
social_impact_data %>%
ggplot(aes(x = Answer, y = Proportion)) +
geom_bar(stat=rev("identity")) + ylab("relative frequencies") +
scale_y_continuous(labels=scales::percent)
social_impact_data %>%
ggplot(aes(x = Answer, y = Proportion)) +
geom_bar(stat="identity") + ylab("relative frequencies") +
scale_y_continuous(labels=scales::percent)
# Create dataset
social_impact_data <- tibble(
Answer = c("Yes", "No", "Probably", "I've Never Noticed"),
Proportion = c(0.4932, 0.0685, 0.3699, 0.0685)
)
social_impact_data
# Define order of answers that will be visualized
social_impact_data$Answer <- social_impact_data$Answer %>%
factor(levels = c("Yes", "No", "Probably", "I've Never Noticed"))
class(social_impact_data$Answer)
social_impact_data %>%
ggplot(aes(x = Answer, y = Proportion)) +
geom_bar(stat="identity") + ylab("Percent of Respondents") +
scale_y_continuous(labels=scales::percent)+
scale_color_brewer(palette = "Dark2")
social_impact_data %>%
ggplot(aes(x = Answer, y = Proportion)) +
geom_bar(stat="identity") + ylab("Percent of Respondents") +
scale_y_continuous(labels=scales::percent) +
scale_fill_brewer(palette = "Dark2")
social_impact_data %>%
ggplot(aes(x = Answer, y = Proportion, fill=Answer)) +
geom_bar(stat="identity") + ylab("Percent of Respondents") +
scale_y_continuous(labels=scales::percent) +
scale_fill_brewer(palette = "Dark2")
social_impact_data %>%
ggplot(aes(x = Answer, y = Proportion, fill=Answer)) +
geom_bar(stat="identity") + ylab("Percent of Respondents") +
scale_y_continuous(labels=scales::percent) +
scale_fill_brewer(palette = "Accent")
social_impact_data %>%
ggplot(aes(x = Answer, y = Proportion, fill=Answer)) +
geom_bar(stat="identity") + ylab("Percent of Respondents") +
scale_y_continuous(labels=scales::percent) +
scale_fill_brewer(palette = "Set1")
social_impact_data %>%
ggplot(aes(x = Answer, y = Proportion, fill=Answer)) +
geom_bar(stat="identity") + ylab("Percent of Respondents") +
scale_y_continuous(labels=scales::percent) +
scale_fill_brewer(palette = "Spectral")
social_impact_data %>%
ggplot(aes(x = Answer, y = Proportion, fill=Answer)) +
geom_bar(stat="identity") + ylab("Percent of Respondents") +
scale_y_continuous(labels=scales::percent) +
scale_fill_brewer(palette = "Dark2")
social_impact_data %>%
ggplot(aes(x = Answer, y = Proportion, fill=Answer)) +
geom_bar(stat="identity") + ylab("Percent of Respondents") +
scale_y_continuous(labels=scales::percent)
setwd("S:/GitHub/AOT-Fandom-Politics/Survey Data")
social_graph <- social_impact_data %>%
ggplot(aes(x = Answer, y = Proportion, fill=Answer)) +
geom_bar(stat="identity", show.legend = FALSE) +
ylab("Percent of Respondents") +
scale_y_continuous(labels=scales::percent)
social_graph
ggsave('plot/social_impact.png', social_graph)
social_graph <- social_impact_data %>%
ggplot(aes(x = Answer, y = Proportion, fill=Answer)) +
geom_bar(stat="identity", show.legend = FALSE) +
ylab("Percent of Respondents") +
scale_y_continuous(labels=scales::percent)
social_graph
social_graph <- social_impact_data %>%
ggplot(aes(x = Answer, y = Proportion, fill=Answer)) +
geom_bar(stat="identity", show.legend = FALSE) +
ylab("Percent of Respondents") +
scale_y_continuous(labels=scales::percent) +
theme(text=element_text(family="TT Times New Roman"))
social_graph
windowsFonts()
social_graph <- social_impact_data %>%
ggplot(aes(x = Answer, y = Proportion, fill=Answer)) +
geom_bar(stat="identity", show.legend = FALSE) +
ylab("Percent of Respondents") +
scale_y_continuous(labels=scales::percent) +
theme(text=element_text(family="TT Times New Roman"))
social_graph
social_graph <- social_impact_data %>%
ggplot(aes(x = Answer, y = Proportion, fill=Answer)) +
geom_bar(stat="identity", show.legend = FALSE) +
ylab("Percent of Respondents") +
scale_y_continuous(labels=scales::percent) +
theme(text=element_text(family="Times New Roman"))
social_graph
social_impact_data %>%
ggplot(aes(x = Answer, y = Proportion, fill=Answer)) +
geom_bar(stat="identity", show.legend = FALSE) +
ylab("Percent of Respondents") +
scale_y_continuous(labels=scales::percent) +
theme(text=element_text(family="TT Times New Roman"))
loadfonts(device = "win")
font_import()
install.packages(font_import)
install.packages("font_import")
install.packages("extrafont")
# Load libraries
library(tidyverse)
library(RColorBrewer)
library(extrafont)
font_import()
